<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.soft.study.dao.AdminDao">

    <!-- 시나리오 삽입 -->
    <insert id="insertScenario">
        INSERT INTO Scenarios (scenario_name, scenario_prompt, created_at)
        VALUES (#{scenarioName}, #{scenarioPrompt}, CURRENT_TIMESTAMP)
    </insert>

    <!-- 시나리오 이름으로 오디오 파일 존재 여부 확인 -->
    <select id="countByScenarioName" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM criminal_voice WHERE scenario_name = #{scenarioName}
    </select>

    <!-- 오디오 파일 업데이트 -->
    <update id="updateAudioFile">
        UPDATE criminal_voice SET voice_path = #{voicePath}, is_final = #{isFinal} WHERE id = #{id} AND scenario_name = #{scenarioName}
    </update>

    <!-- 오디오 파일 삽입 -->
    <insert id="insertAudioFile">
        INSERT INTO criminal_voice (id, scenario_name, voice_path, is_final)
        VALUES (#{id}, #{scenarioName}, #{voicePath}, #{isFinal})
    </insert>

    <!-- 오디오 파일 삭제 -->
    <delete id="deleteAudioFile">
        DELETE FROM criminal_voice WHERE id = #{id} AND scenario_name = #{scenarioName}
    </delete>

    <!-- 시나리오 ID로 오디오 파일 삭제 -->
    <delete id="deleteAudioFilesByScenarioId" parameterType="int">
        DELETE FROM criminal_voice WHERE scenario_name = (SELECT scenario_name FROM Scenarios WHERE id = #{scenarioId})
    </delete>

    <!-- 시나리오 이름으로 최대 오디오 ID 가져오기 -->
    <select id="getMaxAudioIdByScenarioName" parameterType="string" resultType="int">
        SELECT COALESCE(MAX(id), 0) FROM criminal_voice WHERE scenario_name = #{scenarioName}
    </select>

	<!-- 모든 시나리오 가져오기 -->
    <select id="getAllScenarios" resultMap="ScenarioMap">
        SELECT s.id, s.scenario_name, s.scenario_prompt, cv.voice_path
        FROM Scenarios s
        LEFT JOIN criminal_voice cv ON s.scenario_name = cv.scenario_name
        ORDER BY s.id ASC, cv.id ASC;
    </select>

    <!-- 특정 시나리오 가져오기 -->
    <select id="getScenarioById" parameterType="int" resultMap="ScenarioMap">
        SELECT s.id, s.scenario_name, s.scenario_prompt, cv.voice_path
        FROM Scenarios s
        LEFT JOIN criminal_voice cv ON s.scenario_name = cv.scenario_name
        WHERE s.id = #{scenarioId}
    </select>

    <!-- 시나리오 업데이트 -->
    <update id="updateScenario">
        UPDATE Scenarios
        SET scenario_name = #{scenarioName}, scenario_prompt = #{scenarioPrompt}
        WHERE id = #{scenarioId}
    </update>

    <!-- 시나리오 삭제 -->
    <delete id="deleteScenario" parameterType="int">
        DELETE FROM Scenarios WHERE id = #{scenarioId}
    </delete>

    <resultMap id="ScenarioMap" type="kr.soft.study.dto.Scenario">
        <id property="id" column="id"/>
        <result property="scenarioName" column="scenario_name"/>
        <result property="scenarioPrompt" column="scenario_prompt"/>
        <collection property="audioFiles" ofType="kr.soft.study.dto.CriminalVoiceDTO">
            <result property="voicePath" column="voice_path"/>
            <result property="isFinal" column="is_final"  javaType="boolean"/> <!-- 추가 -->
        </collection>
        <!-- 추가 -->
        <collection property="finalAudioFiles" ofType="kr.soft.study.dto.CriminalVoiceDTO">
        	<result property="voicePath" column="voice_path"/>
        	<result property="isFinal" column="is_final"/>
    	</collection>
    </resultMap>
    
    <update id="resetIsFinalByScenarioName">
	    UPDATE criminal_voice 
	    SET is_final = 0 
	    WHERE scenario_name = #{scenarioName}
	</update>
	
	<update id="updateIsFinal">
	    UPDATE criminal_voice 
	    SET is_final = 1 
	    WHERE id = #{id} AND scenario_name = #{scenarioName}
	</update>
	
	
	
<!-- 시나리오별 일반 오디오 파일 가져오기 -->
<select id="getNonFinalAudioFilesByScenarioName" parameterType="string" resultMap="CriminalVoiceMap">
    SELECT idx, id, voice_path, is_final, scenario_name
    FROM criminal_voice
    WHERE scenario_name = #{scenarioName}
    AND is_final = 0
</select> 

<!-- is_final이 1인 오디오 파일들만 가져오기 -->
<select id="getFinalAudioFilesByScenarioName" parameterType="string" resultMap="CriminalVoiceMap">
    SELECT idx, id, voice_path, is_final, scenario_name
    FROM criminal_voice
    WHERE scenario_name = #{scenarioName}
    AND is_final = 1
</select>

<!-- CriminalVoiceDTO의 매핑 설정 -->
<resultMap id="CriminalVoiceMap" type="kr.soft.study.dto.CriminalVoiceDTO">
    <id property="idx" column="idx"/>
    <result property="id" column="id"/>
    <result property="voicePath" column="voice_path"/>
    <result property="isFinal" column="is_final"/>
    <result property="scenarioName" column="scenario_name"/>
</resultMap>
	
</mapper>
